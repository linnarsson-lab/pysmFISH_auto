import prefect
import logging
import sys
import time
from prefect import task
from pathlib import Path
from pythonjsonlogger import jsonlogger


@task()
def setup_extra_loggers():
    """
    Function to format and add extra logs for  monitoring
    the different steps of the pipeline
    """
    extra_logs_list = ['parsing','preprocessing']
    prefect.config.logging.extra_loggers = extra_logs_list



@task()
def nd2_raw_files_selector(experiment_fpath: str) -> list:
    """
    Identify the nd2 raw microscopy files generated by
    the robofish machine. The files must contain CountXXXXX in the name. 

    Args:
        experiment_fpath: str 
            Path to the folder to process. It need to contain the '_auto'
            suffix in order to be process with the automated pipeline

    Returns:
        all_files_to_process: list
            List of PosixPath of the microscopy files to process
        
    """

    logger = prefect.utilities.logging.get_logger("parsing")
    logger.setLevel(logging.DEBUG)
    logger.debug('Identify the raw .nd2 file to process.')

    assert '_auto' in experiment_fpath, 'no _auto in the experiment name'

    experiment_fpath = Path(experiment_fpath)
    searching_key = 'Count*.nd2'
    all_files_to_process = list(experiment_fpath.glob(searching_key))

    assert all_files_to_process, 'no .nd2 raw files to process'
    
    logger.debug(f'Number of files to process {len(raw_files_list)}.')
    return all_files_to_process











@task()
def test_logger(log_stdout=True):
    logger = prefect.utilities.logging.get_logger("preprocessing")
    logger.setLevel(logging.DEBUG)
    logger.debug("An info message.")
    logger.warning("A warning message.")


# Make written output as extra util function
@task()
def test_write_logs_to_file(logs_folder_path:str, log_stdout=True):
    logs_folder_path = Path(logs_folder_path)
    logger = prefect.utilities.logging.get_logger("parsing")
    date_tag = time.strftime("%y%m%d_%H_%M_%S")
    log_name = 'parsing'
    fname = '/Users/simone/Downloads/' + log_name + '_' + date_tag + '_pysmFISH_analysis.log'
    logger = logging.getLogger(log_name)
    handler = logging.FileHandler(str(fname))
    format_str = '%(message)%(levelname)%(name)%(asctime)'
    formatter = jsonlogger.JsonFormatter(format_str)
    handler.setFormatter(formatter)
    logger.addHandler(handler)
    logger.debug("An info message.")
    logger.warning("A warning message.")



@task()
def nd2_processing_files_selector(experiment_fpath: str) -> list:
    """
    Identify the nd2 raw microscopy files generated by
    the robofish machine. The files must contain CountXXXXX in the name. 

    Args:
        experiment_fpath: str 
            Path to the folder to process. It need to contain the '_auto'
            suffix in order to be process with the automated pipeline

    Returns:
        all_files_to_process: list
            List of PosixPath of the microscopy files to process
        
    """

    if '_auto' in experiment_fpath:

        experiment_fpath = Path(experiment_fpath)
        searching_key: '*Count*.nd2'
        all_files_to_process = experiment_fpath.glob(searching_key)
        
    else:
        return 